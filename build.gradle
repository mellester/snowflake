plugins {
    id 'java'
    id 'com.coditory.webjar' version '1.3.1'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'io.miret.etienne.sass' version '1.5.0'
}

compileSass {
    sourceDir = project.file ("${projectDir}src/main/resources/static/scss")
    destPath = "styles"
}

group = 'nl.mellesterk'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    google()
}

def springBootVersion = '3.2.0'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.1.2.RELEASE"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "com.h2database:h2:2.2.224"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: "${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-cache
    implementation "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}"
    // developmentOnly("org.springframework.boot:spring-boot-docker-compose")

    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation "com.j2html:j2html:1.5.0"
    implementation "com.github.jknack:handlebars:4.2.0"
    implementation "org.jetbrains:annotations:22.0.0"
	implementation "org.webjars:webjars-locator-core:0.55"
    implementation 'org.webjars:bootstrap:5.0.1'
    implementation 'org.webjars.npm:bootstrap-icons:1.11.2'
    implementation  'org.webjars.npm:htmx.org:1.9.9'
     implementation 'org.apache.commons:commons-collections4:4.4'
    implementation  'org.webjars.npm:hyperscript.org:0.9.12'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}